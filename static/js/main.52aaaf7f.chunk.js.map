{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","App.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","arrClasses","s","button","push","button_good","button_bad","className","join","type","name","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","leaveFeedback","target","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","positive","Math","round","this","totalFeedback","container","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,OAAS,gCAAgC,YAAc,qCAAqC,WAAa,sC,qBCA3HD,EAAOC,QAAU,CAAC,UAAY,yB,qMCEf,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,6BAAKD,IACJC,K,oBC2BQC,EA9BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,cAAC,WAAD,UACGD,EAAQE,KAAI,SAAAC,GACX,IAAMC,EAAa,CAACC,IAAEC,QAOtB,MANe,SAAXH,GACFC,EAAWG,KAAKF,IAAEG,aAEL,QAAXL,GACFC,EAAWG,KAAKF,IAAEI,YAGlB,wBACEC,UAAWN,EAAWO,KAAK,KAE3BC,KAAK,SACLC,KAAMV,EACNW,QAASb,EALX,SAOGE,GALIA,SCfA,SAASY,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,MCAE,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,U,oBC4CSC,E,4MAnDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,cAAgB,YAAiB,IACzBb,EADwB,EAAbc,OACGb,KACpB,EAAKc,UAAS,SAAAC,GAAI,sBACfhB,EAAOgB,EAAKhB,GAAQ,O,EAIzBiB,mBAAqB,kBACnB,EAAKL,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,EAEpDU,gCAAkC,WAChC,IAAMC,EAAW,EAAKP,MAAMN,KAC5B,OAAOa,GAAYC,KAAKC,MAAkB,IAAXF,EAAkB,EAAKF,uB,uDAG9C,IAAD,EACwBK,KAAKV,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBe,EAAgBD,KAAKL,qBAE3B,OACE,sBAAKnB,UAAWL,IAAE+B,UAAlB,UACE,cAACxC,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASqC,OAAOC,KAAKJ,KAAKV,OAC1BvB,gBAAiBiC,KAAKT,kBAG1B,cAAC7B,EAAD,CAASC,MAAM,aAAf,SACqB,IAAlBsC,EACC,cAACpB,EAAD,CAAcC,QAAQ,sBAEtB,cAACC,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,EACPb,mBAAoBY,KAAKJ,6C,GA3CrBS,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.52aaaf7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2pYf-\",\"button_good\":\"FeedbackOptions_button_good__203O0\",\"button_bad\":\"FeedbackOptions_button_bad__hf7oC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1ECDn\"};","import PropTypes from 'prop-types';\nimport './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <Fragment>\n    {options.map(option => {\n      const arrClasses = [s.button];\n      if (option === 'good') {\n        arrClasses.push(s.button_good);\n      }\n      if (option === 'bad') {\n        arrClasses.push(s.button_bad);\n      }\n      return (\n        <button\n          className={arrClasses.join(' ')}\n          key={option}\n          type=\"button\"\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      );\n    })}\n  </Fragment>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positivePercentage}%</li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\nimport Statistics from './components/Statistics/Statistics';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = ({ target }) => {\n    const type = target.name;\n    this.setState(prev => ({\n      [type]: prev[type] + 1,\n    }));\n  };\n\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbackPercentage = () => {\n    const positive = this.state.good;\n    return positive && Math.round((positive * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n\n    return (\n      <div className={s.container}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalFeedback === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}